{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://three-js-game/webpack/runtime/chunk loaded","webpack://three-js-game/./src/object.ts","webpack://three-js-game/./src/viewResetButton.ts","webpack://three-js-game/./src/animation.ts","webpack://three-js-game/./src/message.ts","webpack://three-js-game/./src/virtualKeyboard.ts","webpack://three-js-game/./src/character.ts","webpack://three-js-game/./src/gameInstance.ts","webpack://three-js-game/./src/game.ts","webpack://three-js-game/./src/npc.ts","webpack://three-js-game/./src/keyboardButton.ts","webpack://three-js-game/./src/billboard.ts","webpack://three-js-game/./src/background.ts","webpack://three-js-game/webpack/bootstrap","webpack://three-js-game/webpack/runtime/define property getters","webpack://three-js-game/webpack/runtime/hasOwnProperty shorthand","webpack://three-js-game/webpack/runtime/make namespace object","webpack://three-js-game/webpack/runtime/jsonp chunk loading","webpack://three-js-game/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import * as THREE from \"three\";\n\n// Create environment objects (trees, rocks, house)\nexport function addEnvironmentObjects(scene: THREE.Scene): void {\n  console.log(\"Adding environment objects...\");\n\n  // Create trees\n  function createTree(x: number, z: number): void {\n    const trunkGeometry = new THREE.CylinderGeometry(0.2, 0.3, 1.5, 8);\n    const trunkMaterial = new THREE.MeshStandardMaterial({ color: 0x8b4513 });\n    const trunk = new THREE.Mesh(trunkGeometry, trunkMaterial);\n    trunk.position.set(x, 0.75, z);\n\n    const leavesGeometry = new THREE.ConeGeometry(1, 2, 8);\n    const leavesMaterial = new THREE.MeshStandardMaterial({ color: 0x228b22 });\n    const leaves = new THREE.Mesh(leavesGeometry, leavesMaterial);\n    leaves.position.set(x, 2.5, z);\n\n    scene.add(trunk);\n    scene.add(leaves);\n  }\n\n  // Create rocks\n  function createRock(x: number, z: number, scale: number): void {\n    const rockGeometry = new THREE.DodecahedronGeometry(scale, 0);\n    const rockMaterial = new THREE.MeshStandardMaterial({\n      color: 0x888888,\n      roughness: 0.9,\n    });\n    const rock = new THREE.Mesh(rockGeometry, rockMaterial);\n    rock.position.set(x, scale / 2, z);\n    rock.rotation.y = Math.random() * Math.PI;\n    scene.add(rock);\n  }\n\n  // Create simple house\n  function createHouse(x: number, z: number): void {\n    // House base\n    const baseGeometry = new THREE.BoxGeometry(4, 2.5, 3);\n    const baseMaterial = new THREE.MeshStandardMaterial({ color: 0xd2b48c });\n    const base = new THREE.Mesh(baseGeometry, baseMaterial);\n    base.position.set(x, 1.25, z);\n\n    // Roof\n    const roofGeometry = new THREE.ConeGeometry(3, 2, 4);\n    const roofMaterial = new THREE.MeshStandardMaterial({ color: 0xa52a2a });\n    const roof = new THREE.Mesh(roofGeometry, roofMaterial);\n    roof.position.set(x, 3.5, z);\n    roof.rotation.y = Math.PI / 4;\n\n    // Door\n    const doorGeometry = new THREE.PlaneGeometry(1, 1.8);\n    const doorMaterial = new THREE.MeshStandardMaterial({ color: 0x8b4513 });\n    const door = new THREE.Mesh(doorGeometry, doorMaterial);\n    door.position.set(x, 1.15, z + 1.51);\n\n    scene.add(base);\n    scene.add(roof);\n    scene.add(door);\n  }\n\n  // Add trees around the area\n  createTree(-8, -8);\n  createTree(-5, -10);\n  createTree(-12, -3);\n  createTree(8, -8);\n  createTree(10, -5);\n  createTree(12, -12);\n  createTree(-8, 8);\n  createTree(-10, 12);\n  createTree(8, 10);\n  createTree(12, 8);\n\n  // Add rocks\n  createRock(-3, -7, 0.7);\n  createRock(5, -4, 0.5);\n  createRock(-6, 2, 0.4);\n  createRock(7, 6, 0.6);\n  createRock(-4, 5, 0.3);\n\n  // Add house\n  createHouse(0, -15);\n  createHouse(-15, 5);\n  createHouse(15, 0);\n}\n","import { gameInstance } from \"./gameInstance\";\n\nexport class ViewResetButton {\n  private resetButton: HTMLButtonElement;\n  private static instance: ViewResetButton | null = null;\n\n  private constructor() {\n    // Create the button element\n    this.resetButton = document.createElement(\"button\");\n    this.resetButton.innerText = \"👁️\";\n    this.resetButton.id = \"view-reset-btn\";\n\n    // Apply styles\n    this.applyStyles();\n\n    // Add event listener\n    this.resetButton.addEventListener(\"click\", this.handleClick.bind(this));\n\n    // Append to body\n    document.body.appendChild(this.resetButton);\n\n    console.log(\"View reset button created\");\n  }\n\n  public static getInstance(): ViewResetButton {\n    if (!ViewResetButton.instance) {\n      ViewResetButton.instance = new ViewResetButton();\n    }\n    return ViewResetButton.instance;\n  }\n\n  private applyStyles(): void {\n    const btn = this.resetButton;\n\n    // Similar styling to KeyboardButton\n    btn.style.position = \"fixed\";\n    btn.style.bottom = \"20px\";\n    btn.style.right = \"90px\"; // Position next to keyboard button\n    btn.style.width = \"60px\";\n    btn.style.height = \"60px\";\n    btn.style.backgroundColor = \"rgba(60, 60, 60, 0.8)\";\n    btn.style.color = \"white\";\n    btn.style.border = \"none\";\n    btn.style.borderRadius = \"50%\";\n    btn.style.fontSize = \"30px\";\n    btn.style.fontWeight = \"bold\";\n    btn.style.cursor = \"pointer\";\n    btn.style.display = \"flex\";\n    btn.style.alignItems = \"center\";\n    btn.style.justifyContent = \"center\";\n    btn.style.zIndex = \"9999\";\n    btn.style.boxShadow = \"0 4px 8px rgba(0, 0, 0, 0.3)\";\n    btn.style.transition = \"all 0.2s ease\";\n    (btn.style as any)[\"-webkit-tap-highlight-color\"] = \"transparent\";\n\n    // Add hover styles\n    btn.onmouseover = () => {\n      btn.style.backgroundColor = \"rgba(80, 80, 80, 0.9)\";\n      btn.style.transform = \"scale(1.05)\";\n    };\n\n    btn.onmouseout = () => {\n      btn.style.backgroundColor = \"rgba(60, 60, 60, 0.8)\";\n      btn.style.transform = \"scale(1)\";\n    };\n\n    // Add active styles\n    btn.onmousedown = () => {\n      btn.style.transform = \"scale(0.95)\";\n    };\n\n    btn.onmouseup = () => {\n      btn.style.transform = \"scale(1)\";\n    };\n  }\n\n  private handleClick(): void {\n    // Check if character exists in the game instance\n    if (gameInstance.character) {\n      // Reset the camera view to its default orientation\n      gameInstance.character.resetCameraView();\n    }\n  }\n}\n","import * as THREE from \"three\";\nimport { Character } from \"./character\";\nimport { gameInstance } from \"./gameInstance\";\nimport { checkBillboardInteractions, billboards } from \"./billboard\";\n\nlet obstacles: THREE.Object3D[] = [];\n\n// Update the setObstacles function to include billboards\nexport function setObstacles(gameScene: THREE.Scene): THREE.Object3D[] {\n  const sceneObstacles: THREE.Object3D[] = [];\n\n  gameScene.traverse((object) => {\n    // Skip non-mesh objects\n    if (!(object instanceof THREE.Mesh)) return;\n\n    // Skip the character mesh\n    if (gameInstance.character && object === gameInstance.character.mesh)\n      return;\n\n    // Skip the floor (assuming it's at y=0 with rotation.x = -Math.PI/2)\n    if (\n      Math.abs(object.position.y) < 0.01 &&\n      Math.abs(object.rotation.x + Math.PI / 2) < 0.01 &&\n      object.geometry instanceof THREE.PlaneGeometry\n    )\n      return;\n\n    // Add to obstacles list\n    sceneObstacles.push(object);\n  });\n\n  console.log(\n    `Collected ${sceneObstacles.length} obstacles for collision detection`\n  );\n  return sceneObstacles;\n}\n\n// Update the animationLoop function to include billboard interactions\nfunction animationLoop(): void {\n  if (\n    !gameInstance.scene ||\n    !gameInstance.renderer ||\n    !gameInstance.camera ||\n    !gameInstance.character\n  ) {\n    console.error(\"Animation loop called with uninitialized game objects\");\n    return;\n  }\n\n  gameInstance.animationId = requestAnimationFrame(animationLoop);\n  gameInstance.character.update(obstacles);\n  gameInstance.character.updateCamera(gameInstance.camera);\n\n  // Add this line to check for billboard interactions\n  checkBillboardInteractions(gameInstance.character.mesh.position);\n\n  gameInstance.renderer.render(gameInstance.scene, gameInstance.camera);\n}\n\nexport function stopAnimation(): void {\n  if (gameInstance.animationId !== null) {\n    cancelAnimationFrame(gameInstance.animationId);\n    gameInstance.animationId = null;\n    console.log(\"Animation stopped\");\n  }\n}\n\nexport function startAnimation(\n  parScene: THREE.Scene,\n  parRenderer: THREE.WebGLRenderer,\n  parCharacter: Character | THREE.Mesh,\n  parCamera: THREE.Camera\n): void {\n  // Stop any existing animation first\n  stopAnimation();\n\n  gameInstance.scene = parScene;\n  gameInstance.renderer = parRenderer;\n\n  if (parCharacter instanceof Character) {\n    gameInstance.character = parCharacter;\n  } else {\n    console.warn(\"Deprecated: Using a THREE.Mesh instead of Character class\");\n    gameInstance.character = new Character(parScene);\n    parScene.remove(gameInstance.character.mesh);\n    gameInstance.character.mesh = parCharacter as THREE.Mesh;\n  }\n\n  gameInstance.camera = parCamera as THREE.PerspectiveCamera;\n  obstacles = setObstacles(parScene);\n\n  console.log(\"Animation started\");\n  animationLoop();\n}\n","// Import package.json using ES modules syntax\nimport pkg from \"../package.json\";\n\n// Define message types\nexport enum MessageType {\n  CONVERSATION,\n  INSTRUCTION,\n}\n\n// Interface for stored instructions\ninterface StoredInstruction {\n  title: string;\n  content: string;\n  timestamp: Date;\n}\n\nexport class MessageSystem {\n  private instructionElement: HTMLDivElement;\n  private conversationElement: HTMLDivElement;\n  private instructionsButton: HTMLButtonElement;\n  private instructionsListElement: HTMLDivElement;\n  private storedInstructions: StoredInstruction[] = [];\n  private static instance: MessageSystem | null = null;\n  private currentlyShowingInstruction: boolean = false;\n  private currentlyShowingConversation: boolean = false;\n  private isTouchDevice: boolean = false;\n  private announcementElement: HTMLDivElement;\n  private currentlyShowingAnnouncement: boolean = false;\n\n  private constructor() {\n    // Detect if it's a touch device\n    this.isTouchDevice =\n      \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\n\n    // Create instruction container (top left)\n    this.instructionElement = document.createElement(\"div\");\n    this.instructionElement.style.position = \"absolute\";\n    this.instructionElement.style.top = \"20px\";\n    this.instructionElement.style.left = \"20px\";\n    this.instructionElement.style.backgroundColor = \"rgba(50, 50, 50, 0.8)\";\n    this.instructionElement.style.color = \"white\";\n    this.instructionElement.style.padding = \"20px\";\n    this.instructionElement.style.borderRadius = \"5px\";\n    this.instructionElement.style.fontFamily = \"Arial, sans-serif\";\n    this.instructionElement.style.zIndex = \"1000\";\n    this.instructionElement.style.display = \"none\";\n    this.instructionElement.style.maxWidth = \"300px\";\n    // Add max-height with scrolling for mobile\n    this.instructionElement.style.maxHeight = this.isTouchDevice\n      ? \"50vh\"\n      : \"auto\";\n    this.instructionElement.style.overflowY = this.isTouchDevice\n      ? \"auto\"\n      : \"visible\";\n\n    // Create conversation container (top right)\n    this.conversationElement = document.createElement(\"div\");\n    this.conversationElement.style.position = \"absolute\";\n    this.conversationElement.style.top = \"20px\";\n    this.conversationElement.style.right = \"20px\"; // Right side positioning\n    this.conversationElement.style.backgroundColor = \"rgba(255, 255, 255, 0.8)\"; // White background\n    this.conversationElement.style.color = \"black\"; // Black text\n    this.conversationElement.style.padding = \"20px\";\n    this.conversationElement.style.borderRadius = \"5px\";\n    this.conversationElement.style.fontFamily = \"Arial, sans-serif\";\n    this.conversationElement.style.zIndex = \"1000\";\n    this.conversationElement.style.display = \"none\";\n    this.conversationElement.style.maxWidth = \"300px\";\n    // Add max-height with scrolling for mobile\n    this.conversationElement.style.maxHeight = this.isTouchDevice\n      ? \"40vh\"\n      : \"auto\";\n    this.conversationElement.style.overflowY = this.isTouchDevice\n      ? \"auto\"\n      : \"visible\";\n\n    // Create instructions button\n    this.instructionsButton = document.createElement(\"button\");\n    this.instructionsButton.innerText = \"📢\";\n    this.instructionsButton.style.position = \"absolute\";\n    this.instructionsButton.style.top = \"20px\";\n    this.instructionsButton.style.left = \"20px\";\n    this.instructionsButton.style.padding = \"8px 12px\";\n    this.instructionsButton.style.backgroundColor = \"rgba(50, 50, 50, 0.8)\";\n    this.instructionsButton.style.color = \"white\";\n    this.instructionsButton.style.border = \"none\";\n    this.instructionsButton.style.borderRadius = \"4px\";\n    this.instructionsButton.style.cursor = \"pointer\";\n    this.instructionsButton.style.zIndex = \"999\";\n    // Make button larger on touch devices\n    if (this.isTouchDevice) {\n      this.instructionsButton.style.padding = \"12px 16px\";\n      this.instructionsButton.style.fontSize = \"18px\";\n    }\n    this.instructionsButton.addEventListener(\"click\", () =>\n      this.showInstructionsList()\n    );\n\n    // Create instructions list container\n    this.instructionsListElement = document.createElement(\"div\");\n    this.instructionsListElement.style.position = \"absolute\";\n    this.instructionsListElement.style.top = this.isTouchDevice\n      ? \"70px\"\n      : \"60px\";\n    this.instructionsListElement.style.left = \"20px\";\n    this.instructionsListElement.style.backgroundColor =\n      \"rgba(70, 70, 70, 0.9)\";\n    this.instructionsListElement.style.color = \"white\";\n    this.instructionsListElement.style.padding = \"15px\";\n    this.instructionsListElement.style.borderRadius = \"5px\";\n    this.instructionsListElement.style.fontFamily = \"Arial, sans-serif\";\n    this.instructionsListElement.style.zIndex = \"1000\";\n    this.instructionsListElement.style.display = \"none\";\n    this.instructionsListElement.style.maxWidth = \"300px\";\n    this.instructionsListElement.style.maxHeight = this.isTouchDevice\n      ? \"50vh\"\n      : \"400px\";\n    this.instructionsListElement.style.overflowY = \"auto\";\n\n    // Create centered announcement container\n    this.announcementElement = document.createElement(\"div\");\n    this.announcementElement.style.position = \"absolute\";\n    this.announcementElement.style.top = \"50%\";\n    this.announcementElement.style.left = \"50%\";\n    this.announcementElement.style.transform = \"translate(-50%, -50%)\";\n    this.announcementElement.style.backgroundColor =\n      \"rgba(255, 255, 255, 0.95)\";\n    this.announcementElement.style.color = \"black\";\n    this.announcementElement.style.padding = \"25px\";\n    this.announcementElement.style.borderRadius = \"8px\";\n    this.announcementElement.style.fontFamily = \"Arial, sans-serif\";\n    this.announcementElement.style.zIndex = \"1001\"; // Higher than other UI elements\n    this.announcementElement.style.display = \"none\";\n    this.announcementElement.style.maxWidth = \"600px\";\n    this.announcementElement.style.width = \"80%\";\n    this.announcementElement.style.maxHeight = this.isTouchDevice\n      ? \"80vh\"\n      : \"70vh\";\n    this.announcementElement.style.overflowY = \"auto\";\n    this.announcementElement.style.boxShadow = \"0 5px 15px rgba(0, 0, 0, 0.3)\";\n    this.announcementElement.style.border = \"1px solid rgba(0, 0, 0, 0.1)\";\n\n    // Add event listeners for Escape key and touch outside\n    document.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Escape\") {\n        this.hideAll();\n      }\n    });\n\n    // Add tap outside to close on touch devices\n    if (this.isTouchDevice) {\n      document.addEventListener(\n        \"touchstart\",\n        (e) => {\n          const target = e.target as Node;\n          if (\n            this.currentlyShowingInstruction ||\n            this.currentlyShowingConversation\n          ) {\n            if (\n              !this.instructionElement.contains(target) &&\n              !this.conversationElement.contains(target) &&\n              !this.instructionsListElement.contains(target) &&\n              target !== this.instructionsButton\n            ) {\n              this.hideAll();\n            }\n          }\n        },\n        { passive: true }\n      );\n    }\n\n    document.body.appendChild(this.instructionElement);\n    document.body.appendChild(this.conversationElement);\n    document.body.appendChild(this.instructionsButton);\n    document.body.appendChild(this.instructionsListElement);\n    document.body.appendChild(this.announcementElement);\n    // Make sure the button is visible initially\n    this.instructionsButton.style.display = \"block\";\n\n    // Add custom styles for mobile\n    if (this.isTouchDevice) {\n      this.addMobileStyles();\n    }\n  }\n\n  private addMobileStyles(): void {\n    const styleEl = document.createElement(\"style\");\n    styleEl.innerHTML = `\n      @media (max-width: 768px) {\n        /* Ensure buttons are easy to tap */\n        button {\n          min-width: 44px;\n          min-height: 44px;\n        }\n        \n        /* Make text larger */\n        .close-button {\n          width: 30px !important;\n          height: 30px !important;\n          line-height: 30px !important;\n          font-size: 18px !important;\n        }\n        \n        /* Add bottom padding to prevent content from being hidden by virtual keyboard */\n        body {\n          padding-bottom: 150px;\n        }\n      }\n    `;\n    document.head.appendChild(styleEl);\n  }\n\n  public static getInstance(): MessageSystem {\n    if (!MessageSystem.instance) {\n      MessageSystem.instance = new MessageSystem();\n    }\n    return MessageSystem.instance;\n  }\n\n  public show(\n    message: string,\n    type: MessageType = MessageType.CONVERSATION\n  ): void {\n    // Create close button\n    const closeButton = `\n      <div class=\"close-button\" style=\"\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        width: 20px;\n        height: 20px;\n        background-color: rgba(200, 50, 50, 0.8);\n        border-radius: 50%;\n        text-align: center;\n        line-height: 20px;\n        cursor: pointer;\n        color: white;\n        font-weight: bold;\n        font-size: 14px;\n      \">×</div>\n    `;\n\n    if (type === MessageType.INSTRUCTION) {\n      // Add the close button to the instruction message\n      this.instructionElement.innerHTML = closeButton + message;\n      this.instructionElement.style.display = \"block\";\n      this.instructionsButton.style.display = \"none\";\n      this.instructionsListElement.style.display = \"none\";\n      this.currentlyShowingInstruction = true;\n\n      // Store instruction\n      const titleMatch = message.match(/<h3>(.*?)<\\/h3>/);\n      const title = titleMatch ? titleMatch[1] : \"Untitled Instruction\";\n      this.storeInstruction(title, message);\n    } else {\n      // Add the close button to the conversation message\n      this.conversationElement.innerHTML = closeButton + message;\n      this.conversationElement.style.display = \"block\";\n      this.currentlyShowingConversation = true;\n    }\n\n    // Add event listener to the close button\n    const targetElement =\n      type === MessageType.INSTRUCTION\n        ? this.instructionElement\n        : this.conversationElement;\n\n    const closeButtonElement = targetElement.querySelector(\".close-button\");\n    if (closeButtonElement) {\n      closeButtonElement.addEventListener(\"click\", (e) => {\n        e.stopPropagation(); // Prevent event from bubbling\n        if (type === MessageType.INSTRUCTION) {\n          this.hideInstruction();\n        } else {\n          this.hideConversation();\n        }\n      });\n    }\n  }\n\n  public hideAll(): void {\n    this.hideInstruction();\n    this.hideConversation();\n    this.hideAnnouncement();\n  }\n\n  public hideInstruction(): void {\n    this.instructionElement.style.display = \"none\";\n    this.instructionsListElement.style.display = \"none\";\n    this.instructionsButton.style.display = \"block\";\n    this.currentlyShowingInstruction = false;\n  }\n\n  public hideConversation(): void {\n    this.conversationElement.style.display = \"none\";\n    this.currentlyShowingConversation = false;\n  }\n\n  // For backward compatibility, hide() will hide both message types\n  public hide(): void {\n    this.hideAll();\n  }\n\n  public showGameInstructions(): void {\n    const version = pkg.version;\n    let instructions = `\n            <h3>Game Controls</h3>\n            <p>Version: ${version}</p>\n            <h4>Movement:</h4>\n            <p>W - Move Forward</p>\n            <p>S - Move Backward</p>\n            <h4>Rotation:</h4>\n            <p>Arrow Left/Right - Turn Left/Right</p>\n            <p>Arrow Up/Down - Look Up/Down</p>\n    `;\n\n    // Add info about virtual controls for touch devices and keyboard button\n    instructions += `\n            <h4>Virtual Controls:</h4>\n            <p>Use the ⌨️ button in the bottom-right corner to show/hide virtual controls.</p>\n    `;\n\n    if (this.isTouchDevice) {\n      instructions += `\n            <p>• Left side: Move forward (W) / backward (S)</p>\n            <p>• Right side: Rotate - arrows for pitch and yaw</p>\n      `;\n    }\n\n    this.show(instructions, MessageType.INSTRUCTION);\n  }\n\n  private storeInstruction(title: string, content: string): void {\n    // Check if this instruction already exists (by title)\n    const existingIndex = this.storedInstructions.findIndex(\n      (instr) => instr.title === title\n    );\n\n    if (existingIndex < 0) {\n      // Add new instruction\n      this.storedInstructions.push({\n        title,\n        content,\n        timestamp: new Date(),\n      });\n    }\n  }\n\n  private showInstructionsList(): void {\n    if (this.storedInstructions.length === 0) {\n      this.instructionsListElement.innerHTML =\n        \"<p>No instructions available.</p>\";\n      this.instructionsListElement.style.display = \"block\";\n      return;\n    }\n\n    // Get instructions in chronological order (oldest first)\n    const orderedInstructions = [...this.storedInstructions].sort(\n      (a, b) => a.timestamp.getTime() - b.timestamp.getTime()\n    );\n\n    // Create the list\n    let listHtml =\n      \"<h3>Available Instructions</h3><ul style='list-style-type: none; padding: 0;'>\";\n\n    orderedInstructions.forEach((instruction, index) => {\n      // Make items larger on touch devices\n      const itemPadding = this.isTouchDevice ? \"12px\" : \"8px\";\n      const itemMargin = this.isTouchDevice ? \"8px 0\" : \"5px 0\";\n\n      listHtml += `\n        <li data-index=\"${index}\" style=\"padding: ${itemPadding}; margin: ${itemMargin}; background-color: rgba(100, 100, 100, 0.7); \n        border-radius: 3px; cursor: pointer; transition: background-color 0.2s;\">\n          ${instruction.title}\n        </li>\n      `;\n    });\n\n    listHtml += \"</ul><p><small>Click an instruction to view</small></p>\";\n\n    this.instructionsListElement.innerHTML = listHtml;\n    this.instructionsListElement.style.display = \"block\";\n\n    // Add click event listeners to list items\n    const listItems = this.instructionsListElement.querySelectorAll(\"li\");\n    listItems.forEach((item) => {\n      item.addEventListener(\"mouseover\", () => {\n        (item as HTMLElement).style.backgroundColor =\n          \"rgba(120, 120, 120, 0.9)\";\n      });\n\n      item.addEventListener(\"mouseout\", () => {\n        (item as HTMLElement).style.backgroundColor =\n          \"rgba(100, 100, 100, 0.7)\";\n      });\n\n      item.addEventListener(\"click\", (e) => {\n        const index = parseInt(\n          (e.currentTarget as HTMLElement).getAttribute(\"data-index\") || \"0\"\n        );\n        this.showStoredInstruction(index);\n      });\n    });\n  }\n\n  private showStoredInstruction(index: number): void {\n    if (index >= 0 && index < this.storedInstructions.length) {\n      // Sort instructions to match the display order (oldest first)\n      const orderedInstructions = [...this.storedInstructions].sort(\n        (a, b) => a.timestamp.getTime() - b.timestamp.getTime()\n      );\n\n      const instruction = orderedInstructions[index];\n\n      this.show(instruction.content, MessageType.INSTRUCTION);\n    }\n  }\n  // Property to store original styles\n  private _originalStyles: {\n    position: string;\n    top: string;\n    left: string;\n    maxWidth: string;\n  } | null = null;\n\n  public showLoading(): void {\n    // Save original styles to restore later\n    const originalPosition = this.instructionElement.style.position;\n    const originalTop = this.instructionElement.style.top;\n    const originalLeft = this.instructionElement.style.left;\n    const originalMaxWidth = this.instructionElement.style.maxWidth;\n\n    // Center the message on screen\n    this.instructionElement.style.position = \"absolute\";\n    this.instructionElement.style.top = \"50%\";\n    this.instructionElement.style.left = \"50%\";\n    this.instructionElement.style.transform = \"translate(-50%, -50%)\";\n    this.instructionElement.style.maxWidth = \"300px\";\n\n    const loadingMessage = `\n    <div style=\"text-align: center;\">\n      <h3>Loading...</h3>\n      <div class=\"loading-spinner\" style=\"\n        display: inline-block;\n        width: 40px;\n        height: 40px;\n        border: 4px solid rgba(255, 255, 255, 0.3);\n        border-radius: 50%;\n        border-top-color: white;\n        animation: spin 1s ease-in-out infinite;\n      \"></div>\n      <p style=\"margin-top: 15px;\">Initializing game...</p>\n    </div>\n    <style>\n      @keyframes spin {\n        to { transform: rotate(360deg); }\n      }\n    </style>\n  `;\n\n    this.instructionElement.innerHTML = loadingMessage;\n    this.instructionElement.style.display = \"block\";\n    this.instructionsButton.style.display = \"none\";\n    this.currentlyShowingInstruction = true;\n\n    // Store original positions for restoring later\n    this._originalStyles = {\n      position: originalPosition,\n      top: originalTop,\n      left: originalLeft,\n      maxWidth: originalMaxWidth,\n    };\n  }\n\n  public hideLoading(): void {\n    // Restore original position styles before hiding\n    if (this._originalStyles) {\n      this.instructionElement.style.position = this._originalStyles.position;\n      this.instructionElement.style.top = this._originalStyles.top;\n      this.instructionElement.style.left = this._originalStyles.left;\n      this.instructionElement.style.maxWidth = this._originalStyles.maxWidth;\n      this.instructionElement.style.transform = \"\"; // Remove transform\n      this._originalStyles = null;\n    }\n\n    this.hideAll();\n  }\n\n  // Add a new instruction\n  public addInstruction(title: string, content: string): void {\n    const formattedContent = `<h3>${title}</h3>${content}`;\n    this.show(formattedContent, MessageType.INSTRUCTION);\n  }\n\n  // Add new showAnnouncement and hideAnnouncement methods\n  public showAnnouncement(message: string): void {\n    // Create close button with X\n    const closeButton = `\n    <div class=\"close-button\" style=\"\n      position: absolute;\n      top: 10px;\n      right: 10px;\n      width: 30px;\n      height: 30px;\n      background-color: rgba(200, 50, 50, 0.8);\n      border-radius: 50%;\n      text-align: center;\n      line-height: 30px;\n      cursor: pointer;\n      color: white;\n      font-weight: bold;\n      font-size: 18px;\n      transition: all 0.2s ease;\n    \">×</div>\n  `;\n\n    // Add the close button to the announcement\n    this.announcementElement.innerHTML = closeButton + message;\n    this.announcementElement.style.display = \"block\";\n    this.currentlyShowingAnnouncement = true;\n\n    // Add event listener to the close button\n    const closeButtonElement =\n      this.announcementElement.querySelector(\".close-button\");\n    if (closeButtonElement) {\n      closeButtonElement.addEventListener(\"click\", (e) => {\n        e.stopPropagation(); // Prevent event from bubbling\n        this.hideAnnouncement();\n      });\n\n      // Add hover effect\n      closeButtonElement.addEventListener(\"mouseover\", () => {\n        (closeButtonElement as HTMLElement).style.transform = \"scale(1.1)\";\n        (closeButtonElement as HTMLElement).style.backgroundColor =\n          \"rgba(220, 50, 50, 0.9)\";\n      });\n\n      closeButtonElement.addEventListener(\"mouseout\", () => {\n        (closeButtonElement as HTMLElement).style.transform = \"scale(1)\";\n        (closeButtonElement as HTMLElement).style.backgroundColor =\n          \"rgba(200, 50, 50, 0.8)\";\n      });\n    }\n  }\n\n  public hideAnnouncement(): void {\n    this.announcementElement.style.display = \"none\";\n    this.currentlyShowingAnnouncement = false;\n  }\n\n  public isShowingAnnouncement(): boolean {\n    return this.currentlyShowingAnnouncement;\n  }\n\n  // Check if currently showing a message (either type)\n  public isShowingMessage(): boolean {\n    return (\n      this.currentlyShowingInstruction || this.currentlyShowingConversation\n    );\n  }\n\n  // Check if showing an instruction specifically\n  public isShowingInstruction(): boolean {\n    return this.currentlyShowingInstruction;\n  }\n\n  // Check if showing a conversation specifically\n  public isShowingConversation(): boolean {\n    return this.currentlyShowingConversation;\n  }\n\n  // Check if this is a touch device\n  public isTouchEnabled(): boolean {\n    return this.isTouchDevice;\n  }\n}\n","import { Character } from \"./character\";\nimport { KeyboardButton } from \"./keyboardButton\";\n\nexport class VirtualKeyboard {\n  private container: HTMLDivElement;\n  private moveContainer: HTMLDivElement;\n  private rotateContainer: HTMLDivElement;\n  private forwardButton: HTMLButtonElement;\n  private backwardButton: HTMLButtonElement;\n  private yawLeftButton: HTMLButtonElement;\n  private yawRightButton: HTMLButtonElement;\n  private pitchUpButton: HTMLButtonElement;\n  private pitchDownButton: HTMLButtonElement;\n  private character: Character | null = null;\n  private static instance: VirtualKeyboard | null = null;\n  private isTouch: boolean = false;\n\n  private constructor() {\n    // Create main container for virtual keyboard\n    this.container = document.createElement(\"div\");\n    this.container.className = \"virtual-keyboard\";\n    this.container.style.position = \"fixed\";\n    this.container.style.bottom = \"100px\"; // Leave space for keyboard button\n    this.container.style.left = \"0\";\n    this.container.style.right = \"0\";\n    this.container.style.display = \"flex\";\n    this.container.style.justifyContent = \"space-between\";\n    this.container.style.padding = \"0 20px\";\n    this.container.style.zIndex = \"1000\";\n    this.container.style.userSelect = \"none\";\n    this.container.style.touchAction = \"none\"; // Prevent default touch actions\n\n    // Create move controls container (left side)\n    this.moveContainer = document.createElement(\"div\");\n    this.moveContainer.style.display = \"flex\";\n    this.moveContainer.style.flexDirection = \"column\";\n    this.moveContainer.style.alignItems = \"center\";\n    this.moveContainer.style.gap = \"10px\";\n\n    // Create rotation controls container (right side)\n    this.rotateContainer = document.createElement(\"div\");\n    this.rotateContainer.style.display = \"flex\";\n    this.rotateContainer.style.flexDirection = \"column\";\n    this.rotateContainer.style.alignItems = \"center\";\n    this.rotateContainer.style.gap = \"10px\";\n\n    // Create movement buttons\n    this.forwardButton = this.createButton(\"W\", \"forward\");\n    this.backwardButton = this.createButton(\"S\", \"backward\");\n\n    // Create rotation buttons\n    this.yawLeftButton = this.createButton(\"◀\", \"yawLeft\");\n    this.yawRightButton = this.createButton(\"▶\", \"yawRight\");\n    this.pitchUpButton = this.createButton(\"▲\", \"pitchUp\");\n    this.pitchDownButton = this.createButton(\"▼\", \"pitchDown\");\n\n    // Add labels\n    const moveLabel = document.createElement(\"div\");\n    moveLabel.textContent = \"Move\";\n    moveLabel.style.color = \"white\";\n    moveLabel.style.textAlign = \"center\";\n    moveLabel.style.marginBottom = \"5px\";\n    moveLabel.style.fontSize = \"14px\";\n    moveLabel.style.textShadow = \"1px 1px 2px black\";\n\n    const rotateLabel = document.createElement(\"div\");\n    rotateLabel.textContent = \"Rotate\";\n    rotateLabel.style.color = \"white\";\n    rotateLabel.style.textAlign = \"center\";\n    rotateLabel.style.marginBottom = \"5px\";\n    rotateLabel.style.fontSize = \"14px\";\n    rotateLabel.style.textShadow = \"1px 1px 2px black\";\n\n    // Create movement button group\n    const moveButtonGroup = document.createElement(\"div\");\n    moveButtonGroup.style.display = \"flex\";\n    moveButtonGroup.style.flexDirection = \"column\";\n    moveButtonGroup.style.gap = \"10px\";\n    moveButtonGroup.appendChild(this.forwardButton);\n    moveButtonGroup.appendChild(this.backwardButton);\n\n    // Create horizontal rotation button group\n    const yawButtonGroup = document.createElement(\"div\");\n    yawButtonGroup.style.display = \"flex\";\n    yawButtonGroup.style.gap = \"10px\";\n    yawButtonGroup.appendChild(this.yawLeftButton);\n    yawButtonGroup.appendChild(this.yawRightButton);\n\n    // Create vertical rotation button group\n    const pitchButtonGroup = document.createElement(\"div\");\n    pitchButtonGroup.style.display = \"flex\";\n    pitchButtonGroup.style.flexDirection = \"column\";\n    pitchButtonGroup.style.gap = \"10px\";\n    pitchButtonGroup.appendChild(this.pitchUpButton);\n    pitchButtonGroup.appendChild(this.pitchDownButton);\n\n    // Add buttons to containers\n    this.moveContainer.appendChild(moveLabel);\n    this.moveContainer.appendChild(moveButtonGroup);\n\n    this.rotateContainer.appendChild(rotateLabel);\n    this.rotateContainer.appendChild(pitchButtonGroup);\n    this.rotateContainer.appendChild(yawButtonGroup);\n\n    // Add containers to main container\n    this.container.appendChild(this.moveContainer);\n    this.container.appendChild(this.rotateContainer);\n\n    // Add CSS for virtual keyboard\n    this.addStyles();\n\n    // Check if device has touch capability\n    this.isTouch = \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\n\n    // Default to hidden for non-touch devices\n    if (this.isTouch) {\n      this.show();\n    } else {\n      this.hide(); // Show on touch devices by default\n    }\n\n    // Add to DOM\n    document.body.appendChild(this.container);\n\n    // Initialize keyboard toggle button and connect it to this virtual keyboard\n    const keyboardButton = KeyboardButton.getInstance();\n    keyboardButton.setToggleCallback((visible) => {\n      if (!visible) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    });\n  }\n\n  public static getInstance(): VirtualKeyboard {\n    if (!VirtualKeyboard.instance) {\n      VirtualKeyboard.instance = new VirtualKeyboard();\n    }\n    return VirtualKeyboard.instance;\n  }\n\n  public setCharacter(character: Character): void {\n    this.character = character;\n  }\n\n  private createButton(text: string, direction: string): HTMLButtonElement {\n    const button = document.createElement(\"button\");\n    button.className = `vk-btn vk-${direction}`;\n    button.innerText = text;\n    button.style.width = \"60px\";\n    button.style.height = \"60px\";\n    button.style.backgroundColor = \"rgba(70, 70, 70, 0.8)\";\n    button.style.color = \"white\";\n    button.style.border = \"none\";\n    button.style.borderRadius = \"10px\";\n    button.style.fontSize = \"24px\";\n    button.style.fontWeight = \"bold\";\n    button.style.cursor = \"pointer\";\n    button.style.display = \"flex\";\n    button.style.alignItems = \"center\";\n    button.style.justifyContent = \"center\";\n    button.style.boxShadow = \"0 4px 8px rgba(0, 0, 0, 0.3)\";\n    button.style.textShadow = \"1px 1px 2px rgba(0, 0, 0, 0.5)\";\n\n    // Style based on button type\n    if (direction.includes(\"forward\")) {\n      button.style.backgroundColor = \"rgba(65, 105, 225, 0.8)\"; // Royal blue\n    } else if (direction.includes(\"backward\")) {\n      button.style.backgroundColor = \"rgba(70, 130, 180, 0.8)\"; // Steel blue\n    } else if (direction.includes(\"yaw\")) {\n      button.style.backgroundColor = \"rgba(139, 0, 139, 0.8)\"; // Dark magenta\n    } else if (direction.includes(\"pitch\")) {\n      button.style.backgroundColor = \"rgba(148, 0, 211, 0.8)\"; // Dark violet\n    }\n\n    // Touch events\n    button.addEventListener(\"touchstart\", (e) => {\n      e.preventDefault();\n      this.handleButtonPress(direction);\n      button.style.transform = \"scale(0.95)\";\n      button.style.opacity = \"1\";\n    });\n\n    button.addEventListener(\"touchend\", (e) => {\n      e.preventDefault();\n      this.handleButtonRelease(direction);\n      button.style.transform = \"scale(1)\";\n      button.style.opacity = \"0.9\";\n    });\n\n    // Also handle mouse events for testing on desktop\n    button.addEventListener(\"mousedown\", (e) => {\n      e.preventDefault();\n      this.handleButtonPress(direction);\n      button.style.transform = \"scale(0.95)\";\n      button.style.opacity = \"1\";\n    });\n\n    button.addEventListener(\"mouseup\", (e) => {\n      e.preventDefault();\n      this.handleButtonRelease(direction);\n      button.style.transform = \"scale(1)\";\n      button.style.opacity = \"0.9\";\n    });\n\n    button.addEventListener(\"mouseleave\", (e) => {\n      this.handleButtonRelease(direction);\n      button.style.transform = \"scale(1)\";\n      button.style.opacity = \"0.9\";\n    });\n\n    return button;\n  }\n\n  private handleButtonPress(direction: string): void {\n    if (!this.character) return;\n\n    // Create a synthetic keyboard event\n    const keyDownEvent = new KeyboardEvent(\"keydown\", {\n      code: this.getKeyCodeFromDirection(direction),\n      bubbles: true,\n    });\n\n    // Dispatch event to document\n    document.dispatchEvent(keyDownEvent);\n  }\n\n  private handleButtonRelease(direction: string): void {\n    if (!this.character) return;\n\n    // Create a synthetic keyboard event\n    const keyUpEvent = new KeyboardEvent(\"keyup\", {\n      code: this.getKeyCodeFromDirection(direction),\n      bubbles: true,\n    });\n\n    // Dispatch event to document\n    document.dispatchEvent(keyUpEvent);\n  }\n\n  private getKeyCodeFromDirection(direction: string): string {\n    switch (direction) {\n      case \"forward\":\n        return \"KeyW\";\n      case \"backward\":\n        return \"KeyS\";\n      case \"yawLeft\":\n        return \"ArrowLeft\";\n      case \"yawRight\":\n        return \"ArrowRight\";\n      case \"pitchUp\":\n        return \"ArrowUp\";\n      case \"pitchDown\":\n        return \"ArrowDown\";\n      default:\n        return \"\";\n    }\n  }\n\n  public show(): void {\n    this.container.style.display = \"flex\";\n    // Update keyboard button state\n    KeyboardButton.getInstance().setVisibility(true);\n  }\n\n  public hide(): void {\n    this.container.style.display = \"none\";\n    // Update keyboard button state\n    KeyboardButton.getInstance().setVisibility(false);\n  }\n\n  private addStyles(): void {\n    // Add CSS for virtual keyboard\n    const styleElement = document.createElement(\"style\");\n    styleElement.textContent = `\n      .virtual-keyboard {\n        transition: opacity 0.3s ease;\n        padding-bottom: env(safe-area-inset-bottom, 10px); /* For notched phones */\n      }\n      \n      .virtual-keyboard button {\n        transition: all 0.1s ease;\n        user-select: none;\n        -webkit-tap-highlight-color: transparent;\n        opacity: 0.9;\n      }\n      \n      .virtual-keyboard button:active {\n        transform: scale(0.95) !important;\n        opacity: 1 !important;\n      }\n      \n      /* Specific button styling */\n      .vk-forward, .vk-backward {\n        transition: transform 0.2s ease;\n      }\n      \n      /* Ensure buttons are large enough on mobile */\n      @media (max-width: 768px) {\n        .virtual-keyboard button {\n          width: 65px !important;\n          height: 65px !important;\n          font-size: 28px !important;\n        }\n      }\n      \n      /* Even larger for small screens */\n      @media (max-width: 376px) {\n        .virtual-keyboard button {\n          width: 55px !important;\n          height: 55px !important;\n        }\n      }\n      \n      /* Handle landscape mode */\n      @media (max-height: 500px) {\n        .virtual-keyboard {\n          flex-direction: row;\n          justify-content: space-between;\n          bottom: 5px;\n        }\n        \n        .virtual-keyboard button {\n          width: 45px !important;\n          height: 45px !important;\n          font-size: 20px !important;\n        }\n      }\n      \n      /* Hide from screen readers */\n      .virtual-keyboard {\n        aria-hidden: true;\n      }\n    `;\n    document.head.appendChild(styleElement);\n  }\n}\n","import * as THREE from \"three\";\nimport { checkNPCInteractions } from \"./npc\";\n\n// Set the character\nexport function setCharacter(scene: THREE.Scene): THREE.Mesh {\n  console.log(\"Setting character...\");\n\n  // Create character (simple cube for now)\n  const characterGeometry = new THREE.BoxGeometry(0.5, 1, 0.5);\n  const characterMaterial = new THREE.MeshStandardMaterial({ color: 0x00aaff });\n  const character = new THREE.Mesh(characterGeometry, characterMaterial);\n\n  character.position.set(0, 0.5, 0);\n  scene.add(character);\n\n  return character;\n}\n\nexport class Character {\n  mesh: THREE.Mesh;\n  velocity: THREE.Vector3;\n  collider: THREE.Box3;\n  rotationSpeed: number = 0.05;\n  pitchSpeed: number = 0.03;\n  movementSpeed: number = 0.1;\n  // Movement controls\n  moveForward: boolean = false;\n  moveBackward: boolean = false;\n  // Rotation controls\n  yawLeft: boolean = false;\n  yawRight: boolean = false;\n  pitchUp: boolean = false;\n  pitchDown: boolean = false;\n  // Max pitch angles in radians\n  maxPitchUp: number = Math.PI / 4; // 45 degrees up\n  maxPitchDown: number = -Math.PI / 6; // 30 degrees down\n  // Current pitch angle\n  currentPitch: number = 0;\n\n  keyControlsSetup = false;\n\n  constructor(scene: THREE.Scene) {\n    // Create character (simple cube)\n    const characterGeometry = new THREE.BoxGeometry(0.5, 1, 0.5);\n    const characterMaterial = new THREE.MeshStandardMaterial({\n      color: 0x00aaff,\n    });\n    this.mesh = new THREE.Mesh(characterGeometry, characterMaterial);\n    this.mesh.position.set(0, 0.5, 0);\n\n    // Create collision box\n    this.collider = new THREE.Box3().setFromObject(this.mesh);\n\n    // Initialize velocity\n    this.velocity = new THREE.Vector3();\n\n    // Add to scene\n    scene.add(this.mesh);\n\n    console.log(\"Character created\");\n  }\n\n  // Set up key controls for character\n  setupControls(): void {\n    if (this.keyControlsSetup) {\n      console.log(\"Key controls already set up, skipping...\");\n      return;\n    }\n\n    // Bind the event handlers to the class instance\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n\n    // Remove any existing event listeners first to prevent multiple bindings\n    document.removeEventListener(\"keydown\", this.onKeyDown);\n    document.removeEventListener(\"keyup\", this.onKeyUp);\n\n    // Add event listeners\n    document.addEventListener(\"keydown\", this.onKeyDown);\n    document.addEventListener(\"keyup\", this.onKeyUp);\n\n    this.keyControlsSetup = true;\n    console.log(\"Character controls set up\");\n  }\n\n  // Handle keydown events\n  onKeyDown(event: KeyboardEvent): void {\n    switch (event.code) {\n      // Movement keys\n      case \"KeyW\":\n        this.moveForward = true;\n        break;\n      case \"KeyS\":\n        this.moveBackward = true;\n        break;\n      // Rotation keys\n      case \"ArrowLeft\":\n        this.yawLeft = true;\n        break;\n      case \"ArrowRight\":\n        this.yawRight = true;\n        break;\n      case \"ArrowUp\":\n        this.pitchUp = true;\n        break;\n      case \"ArrowDown\":\n        this.pitchDown = true;\n        break;\n    }\n  }\n\n  // Handle keyup events\n  onKeyUp(event: KeyboardEvent): void {\n    switch (event.code) {\n      // Movement keys\n      case \"KeyW\":\n        this.moveForward = false;\n        break;\n      case \"KeyS\":\n        this.moveBackward = false;\n        break;\n      // Rotation keys\n      case \"ArrowLeft\":\n        this.yawLeft = false;\n        break;\n      case \"ArrowRight\":\n        this.yawRight = false;\n        break;\n      case \"ArrowUp\":\n        this.pitchUp = false;\n        break;\n      case \"ArrowDown\":\n        this.pitchDown = false;\n        break;\n    }\n  }\n\n  update(obstacles: THREE.Object3D[]): void {\n    // Handle yaw rotation (left/right)\n    if (this.yawLeft) {\n      this.mesh.rotation.y += this.rotationSpeed;\n    }\n    if (this.yawRight) {\n      this.mesh.rotation.y -= this.rotationSpeed;\n    }\n\n    // Handle pitch rotation (up/down) with limits\n    if (this.pitchUp) {\n      this.currentPitch += this.pitchSpeed;\n      if (this.currentPitch > this.maxPitchUp) {\n        this.currentPitch = this.maxPitchUp;\n      }\n    }\n    if (this.pitchDown) {\n      this.currentPitch -= this.pitchSpeed;\n      if (this.currentPitch < this.maxPitchDown) {\n        this.currentPitch = this.maxPitchDown;\n      }\n    }\n\n    // Reset velocity\n    this.velocity.set(0, 0, 0);\n\n    // Calculate movement based on character's rotation\n    if (this.moveForward) {\n      this.velocity.x = Math.sin(this.mesh.rotation.y) * this.movementSpeed;\n      this.velocity.z = Math.cos(this.mesh.rotation.y) * this.movementSpeed;\n    }\n    if (this.moveBackward) {\n      this.velocity.x = -Math.sin(this.mesh.rotation.y) * this.movementSpeed;\n      this.velocity.z = -Math.cos(this.mesh.rotation.y) * this.movementSpeed;\n    }\n\n    // Only proceed with movement if we're actually moving\n    if (this.velocity.lengthSq() > 0) {\n      // Store original position for collision detection\n      const originalPosition = this.mesh.position.clone();\n\n      // Move character\n      this.mesh.position.x += this.velocity.x;\n      this.mesh.position.z += this.velocity.z;\n      this.mesh.updateMatrix();\n\n      // Update collider to the new position\n      this.collider.setFromObject(this.mesh);\n\n      // Check collisions with obstacles\n      if (this.checkCollisions(obstacles) || this.isOutOfBounds()) {\n        // Collision detected or out of bounds, revert position\n        this.mesh.position.copy(originalPosition);\n        this.mesh.updateMatrix();\n        // Update collider to the reverted position\n        this.collider.setFromObject(this.mesh);\n      }\n    }\n\n    // Check for NPC interactions\n    checkNPCInteractions(this.mesh.position);\n  }\n\n  // Add a new method to check if the character is out of bounds\n  isOutOfBounds(): boolean {\n    // Get the floor size (50x50 as defined in background.ts)\n    const floorSize = 50;\n    const halfFloorSize = floorSize / 2;\n\n    // Define a small margin to prevent the character from going exactly to the edge\n    const margin = 0.5; // Half the width of the character\n\n    // Check if character is outside the floor boundaries\n    if (\n      Math.abs(this.mesh.position.x) > halfFloorSize - margin ||\n      Math.abs(this.mesh.position.z) > halfFloorSize - margin\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Check collisions with obstacles\n  checkCollisions(obstacles: THREE.Object3D[]): boolean {\n    for (const obstacle of obstacles) {\n      // Skip non-mesh objects\n      if (!(obstacle instanceof THREE.Mesh)) continue;\n\n      // Create a temporary box3 for the obstacle\n      const obstacleBox = new THREE.Box3().setFromObject(obstacle);\n\n      // Check for intersection\n      if (this.collider.intersectsBox(obstacleBox)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Update camera to follow character\n  updateCamera(camera: THREE.Camera): void {\n    const cameraDistance = 5;\n\n    // Calculate the horizontal position behind the character\n    const directionX = Math.sin(this.mesh.rotation.y);\n    const directionZ = Math.cos(this.mesh.rotation.y);\n\n    // First position the camera behind the character (without pitch)\n    camera.position.x = this.mesh.position.x - directionX * cameraDistance;\n    camera.position.z = this.mesh.position.z - directionZ * cameraDistance;\n\n    // Set base camera height (fixed height from character)\n    const baseHeight = 1.5; // Height above character\n    camera.position.y = this.mesh.position.y + baseHeight;\n\n    // Always look at the character's position (center of view)\n    // This keeps the character centered in the view\n    camera.lookAt(this.mesh.position);\n\n    // Apply pitch rotation directly to the camera (keeping character centered)\n    // Create a pitch rotation matrix\n    const pitchQuaternion = new THREE.Quaternion();\n    // Create a rotation around the camera's local X axis by the pitch amount\n    pitchQuaternion.setFromAxisAngle(\n      new THREE.Vector3(1, 0, 0),\n      this.currentPitch\n    );\n\n    // Apply the pitch rotation to the camera (maintaining character at center)\n    camera.quaternion.multiply(pitchQuaternion);\n  }\n\n  // Reset the camera view to its default orientation\n  resetCameraView(): void {\n    // Reset pitch and yaw to 0 (neutral position)\n    this.currentPitch = 0;\n    this.mesh.rotation.y = 0;\n    console.log(\"Camera view reset\");\n  }\n}\n","// gameInstance.ts\nimport * as THREE from \"three\";\nimport { Character } from \"./character\";\n\n// Global game instance to ensure only one instance runs\ninterface GameInstance {\n  scene: THREE.Scene | null;\n  camera: THREE.PerspectiveCamera | null;\n  renderer: THREE.WebGLRenderer | null;\n  character: Character | null;\n  animationId: number | null;\n  initialized: boolean;\n}\n\n// Create singleton instance\nexport const gameInstance: GameInstance = {\n  scene: null,\n  camera: null,\n  renderer: null,\n  character: null,\n  animationId: null,\n  initialized: false,\n};\n\n// Clean up function to ensure proper disposal\nexport function cleanupGameInstance(): void {\n  if (gameInstance.animationId !== null) {\n    cancelAnimationFrame(gameInstance.animationId);\n    gameInstance.animationId = null;\n  }\n\n  if (gameInstance.renderer) {\n    gameInstance.renderer.dispose();\n    // Get canvas and remove\n    const canvas = document.getElementById(\"gameCanvas\") as HTMLCanvasElement;\n    if (canvas && canvas.parentNode) {\n      // Just clear the WebGL context, don't remove the canvas\n      const gl =\n        canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\n      if (gl) {\n        // @ts-ignore: loseContext is an extension\n        const extension = gl.getExtension(\"WEBGL_lose_context\");\n        if (extension) extension.loseContext();\n      }\n    }\n  }\n\n  // Clear memory\n  gameInstance.scene = null;\n  gameInstance.camera = null;\n  gameInstance.renderer = null;\n  gameInstance.character = null;\n  gameInstance.initialized = false;\n\n  console.log(\"Game instance cleaned up\");\n}\n","import { startAnimation } from \"./animation\";\nimport { setScene, setWindowResize } from \"./background\";\nimport { billboards } from \"./billboard\";\nimport { Character } from \"./character\";\nimport { addEnvironmentObjects } from \"./object\";\nimport { gameInstance, cleanupGameInstance } from \"./gameInstance\";\nimport { MessageSystem } from \"./message\";\nimport { npcs } from \"./npc\";\nimport { ViewResetButton } from \"./viewResetButton\";\nimport { VirtualKeyboard } from \"./virtualKeyboard\";\nimport { KeyboardButton } from \"./keyboardButton\";\n\n// Initialize the game\nfunction init(): void {\n  // Prevent double initialization\n  if (gameInstance.initialized) {\n    console.log(\"Game already initialized, skipping...\");\n    return;\n  }\n\n  // Clean up any existing instance first\n  cleanupGameInstance();\n\n  console.log(\"Starting game initialization...\");\n\n  // First set up the scene and display it - no loading screen yet\n  const {\n    scene: newScene,\n    camera: newCamera,\n    renderer: newRenderer,\n  } = setScene();\n\n  gameInstance.scene = newScene;\n  gameInstance.camera = newCamera;\n  gameInstance.renderer = newRenderer;\n\n  // Render once to show the background\n  newRenderer.render(newScene, newCamera);\n\n  // Now show the loading screen - after the background is visible\n  MessageSystem.getInstance().showLoading();\n\n  // Use requestAnimationFrame to continue initialization on the next frame\n  // This ensures the loading screen is rendered\n  requestAnimationFrame(() => {\n    console.log(\"Setting up environment objects...\");\n    addEnvironmentObjects(newScene);\n    npcs.forEach((npc) => npc.createMesh(newScene));\n    billboards.forEach((billboard) => billboard.createMesh(newScene));\n\n    // Render another frame to show environment objects being added\n    newRenderer.render(newScene, newCamera);\n\n    console.log(\"Setting character...\");\n    gameInstance.character = new Character(newScene);\n\n    // Initialize keyboard toggle button first\n    console.log(\"Setting up keyboard button...\");\n    const keyboardButton = KeyboardButton.getInstance();\n\n    // Setup key controls\n    console.log(\"Setting up key controls...\");\n    gameInstance.character.setupControls();\n\n    // Initialize virtual keyboard\n    console.log(\"Setting up virtual keyboard...\");\n    const virtualKeyboard = VirtualKeyboard.getInstance();\n    virtualKeyboard.setCharacter(gameInstance.character);\n\n    // Initialize view reset button\n    console.log(\"Setting up view reset button...\");\n    ViewResetButton.getInstance();\n\n    // Adjust for window resize\n    console.log(\"Setting up window resize...\");\n    setWindowResize(newCamera, newRenderer);\n\n    // Start animation loop\n    console.log(\"Starting animation loop...\");\n    startAnimation(newScene, newRenderer, gameInstance.character, newCamera);\n\n    gameInstance.initialized = true;\n    console.log(\"Game initialization complete.\");\n\n    setTimeout(() => {\n      // Hide loading screen\n      MessageSystem.getInstance().hideLoading();\n      // Show game instructions\n      MessageSystem.getInstance().showGameInstructions();\n\n      // For touch devices, show virtual keyboard and set button state by default\n      if (\"ontouchstart\" in window || navigator.maxTouchPoints > 0) {\n        virtualKeyboard.show();\n      }\n    }, 1000);\n\n    // Add some additional example instructions\n    setTimeout(() => {\n      MessageSystem.getInstance().addInstruction(\n        \"#2 Game Objective\",\n        `\n        <p>Explore Shinyeong land.</p>\n      `\n      );\n    }, 5000);\n\n    setTimeout(() => {\n      MessageSystem.getInstance().addInstruction(\"#3 Test message\", \"test\");\n    }, 10000);\n  });\n}\n\n// Only start the game if we're in the browser environment\nif (typeof window !== \"undefined\") {\n  // Ensure the DOM is fully loaded before initialization\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      init();\n    });\n  } else {\n    init();\n  }\n}\n\n// Handle hot module replacement for development\n// @ts-ignore: Ignoring TS error for module.hot which is provided by webpack\nif (module.hot) {\n  // @ts-ignore: Ignoring TS error for module.hot\n  module.hot.dispose(() => {\n    console.log(\"Hot module replacement - cleaning up\");\n    cleanupGameInstance();\n  });\n\n  // @ts-ignore: Ignoring TS error for module.hot\n  module.hot.accept(() => {\n    console.log(\"Hot module replacement - reinitializing\");\n    setTimeout(() => {\n      if (!gameInstance.initialized) {\n        init();\n      }\n    }, 300);\n  });\n}\n\n// Export for module hot reloading support\nexport { init, cleanupGameInstance };\n","import * as THREE from \"three\";\nimport { MessageSystem, MessageType } from \"./message\";\n\ninterface NPCConfig {\n  position: THREE.Vector3;\n  message: string;\n}\n\nclass NPC {\n  private position: THREE.Vector3;\n  private message: string;\n  public mesh: THREE.Mesh | null;\n  public isInteracting: boolean;\n  private interactionRange: number = 3; // Distance at which interaction is possible\n  private leaveRange: number = 4; // Distance at which conversation ends (slightly larger)\n\n  constructor(config: NPCConfig) {\n    this.position = config.position;\n    this.message = config.message;\n    this.mesh = null;\n    this.isInteracting = false;\n  }\n\n  public createMesh(scene: THREE.Scene): void {\n    const geometry = new THREE.BoxGeometry(1, 2, 1);\n    const material = new THREE.MeshPhongMaterial({ color: 0x00ff00 });\n    this.mesh = new THREE.Mesh(geometry, material);\n    this.mesh.position.copy(this.position);\n    scene.add(this.mesh);\n  }\n\n  public checkInteraction(playerPosition: THREE.Vector3): boolean {\n    if (!this.mesh) return false;\n    const distance = playerPosition.distanceTo(this.mesh.position);\n    return distance < this.interactionRange; // Interaction range\n  }\n\n  public checkLeaveRange(playerPosition: THREE.Vector3): boolean {\n    if (!this.mesh) return false;\n    const distance = playerPosition.distanceTo(this.mesh.position);\n    return distance > this.leaveRange; // Leave conversation range (slightly larger than interaction range)\n  }\n\n  public startConversation(): void {\n    // Use the MessageSystem with CONVERSATION type\n    const formattedMessage = `\n      <h3>NPC</h3>\n      <p>${this.message}</p>\n    `;\n\n    MessageSystem.getInstance().show(\n      formattedMessage,\n      MessageType.CONVERSATION\n    );\n    this.isInteracting = true;\n  }\n\n  public endConversation(): void {\n    this.isInteracting = false;\n  }\n}\n\n// Create NPCs\nexport const npcs: NPC[] = [\n  new NPC({ position: new THREE.Vector3(5, 0, 5), message: \"Hello world!\" }),\n  new NPC({\n    position: new THREE.Vector3(-5, 0, 5),\n    message: \"Welcome to my land!\",\n  }),\n  new NPC({\n    position: new THREE.Vector3(0, 0, -5),\n    message: \"How are you doing?\",\n  }),\n];\n\n// Function to close conversation\nexport function closeConversation(): void {\n  // Use MessageSystem to hide the conversation\n  MessageSystem.getInstance().hideConversation();\n  npcs.forEach((npc) => (npc.isInteracting = false));\n}\n\n// Function to check NPC interactions\nexport function checkNPCInteractions(playerPosition: THREE.Vector3): void {\n  // Check if any NPCs that are currently in conversation should end their conversation\n  // because the player walked away\n  const interactingNPC = npcs.find((npc) => npc.isInteracting);\n  if (interactingNPC) {\n    if (interactingNPC.checkLeaveRange(playerPosition)) {\n      // Player walked away from an NPC they were talking to\n      closeConversation();\n    }\n    return; // Don't check for new interactions while in conversation\n  }\n\n  // Only check for new interactions if no conversation is currently showing\n  if (MessageSystem.getInstance().isShowingConversation()) {\n    return; // Don't check for new interactions while in conversation\n  }\n\n  // Check if player is close enough to any NPC to start a conversation\n  npcs.forEach((npc) => {\n    if (npc.checkInteraction(playerPosition)) {\n      npc.startConversation();\n    }\n  });\n}\n","// A separate module for the keyboard toggle button to ensure it loads correctly\nexport class KeyboardButton {\n  private toggleButton: HTMLButtonElement;\n  private isVisible: boolean = false;\n  private onToggleCallback: ((visible: boolean) => void) | null = null;\n  private static instance: KeyboardButton | null = null;\n\n  private constructor() {\n    // Create the button element\n    this.toggleButton = document.createElement(\"button\");\n    this.toggleButton.innerText = \"⌨️\";\n    this.toggleButton.id = \"keyboard-toggle-btn\";\n\n    // Apply styles\n    this.applyStyles();\n\n    // Add event listener\n    this.toggleButton.addEventListener(\"click\", this.handleClick.bind(this));\n\n    // Append to body\n    document.body.appendChild(this.toggleButton);\n\n    console.log(\"Keyboard toggle button created\");\n  }\n\n  public static getInstance(): KeyboardButton {\n    if (!KeyboardButton.instance) {\n      KeyboardButton.instance = new KeyboardButton();\n    }\n    return KeyboardButton.instance;\n  }\n\n  private applyStyles(): void {\n    const btn = this.toggleButton;\n\n    // Apply inline styles for maximum compatibility\n    btn.style.position = \"fixed\";\n    btn.style.bottom = \"20px\";\n    btn.style.right = \"20px\";\n    btn.style.width = \"60px\";\n    btn.style.height = \"60px\";\n    btn.style.backgroundColor = \"rgba(60, 60, 60, 0.8)\";\n    btn.style.color = \"white\";\n    btn.style.border = \"none\";\n    btn.style.borderRadius = \"50%\";\n    btn.style.fontSize = \"30px\";\n    btn.style.fontWeight = \"bold\";\n    btn.style.cursor = \"pointer\";\n    btn.style.display = \"flex\";\n    btn.style.alignItems = \"center\";\n    btn.style.justifyContent = \"center\";\n    btn.style.zIndex = \"9999\"; // Very high z-index to ensure visibility\n    btn.style.boxShadow = \"0 4px 8px rgba(0, 0, 0, 0.3)\";\n    btn.style.transition = \"all 0.2s ease\";\n    // Remove tap highlight on mobile (using the standard CSS property name)\n    (btn.style as any)[\"-webkit-tap-highlight-color\"] = \"transparent\";\n\n    // Add hover styles\n    btn.onmouseover = () => {\n      btn.style.backgroundColor = \"rgba(80, 80, 80, 0.9)\";\n      btn.style.transform = \"scale(1.05)\";\n    };\n\n    btn.onmouseout = () => {\n      if (!this.isVisible) {\n        btn.style.backgroundColor = \"rgba(60, 60, 60, 0.8)\";\n      }\n      btn.style.transform = \"scale(1)\";\n    };\n\n    // Add active styles\n    btn.onmousedown = () => {\n      btn.style.transform = \"scale(0.95)\";\n    };\n\n    btn.onmouseup = () => {\n      btn.style.transform = \"scale(1)\";\n    };\n  }\n\n  private handleClick(): void {\n    // Update button appearance to show state\n    if (this.isVisible) {\n      this.toggleButton.style.backgroundColor = \"rgba(0, 120, 215, 0.8)\"; // Blue when active\n    } else {\n      this.toggleButton.style.backgroundColor = \"rgba(60, 60, 60, 0.8)\";\n    }\n\n    // Call the callback if set\n    if (this.onToggleCallback) {\n      this.onToggleCallback(this.isVisible);\n    }\n  }\n\n  public setToggleCallback(callback: (visible: boolean) => void): void {\n    this.onToggleCallback = callback;\n  }\n\n  public getIsVisible(): boolean {\n    return this.isVisible;\n  }\n\n  public setVisibility(visible: boolean): void {\n    if (this.isVisible !== visible) {\n      this.isVisible = visible;\n\n      // Update button appearance\n      if (this.isVisible) {\n        this.toggleButton.style.backgroundColor = \"rgba(0, 120, 215, 0.8)\"; // Blue when active\n      } else {\n        this.toggleButton.style.backgroundColor = \"rgba(60, 60, 60, 0.8)\";\n      }\n    }\n  }\n}\n","import * as THREE from \"three\";\nimport { MessageSystem, MessageType } from \"./message\";\n\ninterface BillboardConfig {\n  position: THREE.Vector3;\n  rotation?: number;\n  title: string;\n  message: string;\n}\n\nexport class Billboard {\n  private position: THREE.Vector3;\n  private rotation: number;\n  private mesh: THREE.Group | null = null;\n  private title: string;\n  private message: string;\n  private interactionRange: number = 3;\n  private isInteracting: boolean = false;\n\n  constructor(config: BillboardConfig) {\n    this.position = config.position;\n    this.rotation = config.rotation || 0;\n    this.title = config.title;\n    this.message = config.message;\n  }\n\n  public createMesh(scene: THREE.Scene): void {\n    // Create a group to hold all billboard parts\n    this.mesh = new THREE.Group();\n    this.mesh.position.copy(this.position);\n    this.mesh.rotation.y = this.rotation;\n\n    // Create the wooden frame\n    const frameGeometry = new THREE.BoxGeometry(3, 2.5, 0.2);\n    const frameMaterial = new THREE.MeshStandardMaterial({\n      color: 0x8b4513, // Brown color for wood\n      roughness: 0.9,\n      metalness: 0.1,\n    });\n    const frame = new THREE.Mesh(frameGeometry, frameMaterial);\n\n    // Create inner paper/board part\n    const boardGeometry = new THREE.PlaneGeometry(2.7, 2.2);\n    const boardMaterial = new THREE.MeshStandardMaterial({\n      color: 0xfaf0e6, // Light off-white for paper\n      roughness: 0.5,\n      metalness: 0,\n    });\n    const board = new THREE.Mesh(boardGeometry, boardMaterial);\n    board.position.z = 0.11; // Slightly in front of frame\n\n    // Create legs/posts\n    const postGeometry = new THREE.CylinderGeometry(0.1, 0.1, 2.5, 8);\n    const postMaterial = new THREE.MeshStandardMaterial({\n      color: 0x8b4513,\n      roughness: 0.9,\n      metalness: 0.1,\n    });\n\n    const leftPost = new THREE.Mesh(postGeometry, postMaterial);\n    leftPost.position.set(-1.2, -2.5, 0);\n\n    const rightPost = new THREE.Mesh(postGeometry, postMaterial);\n    rightPost.position.set(1.2, -2.5, 0);\n\n    // Add a small \"ANNOUNCEMENTS\" text indicator at the top\n    const headerGeometry = new THREE.BoxGeometry(2.5, 0.3, 0.05);\n    const headerMaterial = new THREE.MeshStandardMaterial({ color: 0x593e1a });\n    const header = new THREE.Mesh(headerGeometry, headerMaterial);\n    header.position.y = 1.3;\n    header.position.z = 0.13;\n\n    // Add all parts to the group\n    this.mesh.add(frame);\n    this.mesh.add(board);\n    this.mesh.add(leftPost);\n    this.mesh.add(rightPost);\n    this.mesh.add(header);\n\n    // Position the entire billboard properly (adjust base y position to account for posts)\n    this.mesh.position.y = 1.25; // Half of the board height + post height\n\n    // Add to scene\n    scene.add(this.mesh);\n  }\n\n  public checkInteraction(playerPosition: THREE.Vector3): boolean {\n    if (!this.mesh) return false;\n    const distance = playerPosition.distanceTo(this.mesh.position);\n    return distance < this.interactionRange;\n  }\n\n  public checkLeaveRange(playerPosition: THREE.Vector3): boolean {\n    if (!this.mesh) return false;\n    const distance = playerPosition.distanceTo(this.mesh.position);\n    return distance > this.interactionRange + 1; // Slightly larger than interaction range\n  }\n\n  public startInteraction(): void {\n    if (this.isInteracting) return;\n\n    // Format the message with title and content\n    const formattedMessage = `\n      <div style=\"text-align: center; width: 100%;\">\n        <h2>${this.title}</h2>\n        <div style=\"text-align: left; margin: 15px 0;\">${this.message}</div>\n      </div>\n    `;\n\n    // Show centered announcement\n    MessageSystem.getInstance().showAnnouncement(formattedMessage);\n    this.isInteracting = true;\n  }\n\n  public endInteraction(): void {\n    MessageSystem.getInstance().hideAnnouncement();\n    this.isInteracting = false;\n  }\n\n  public getIsInteracting(): boolean {\n    return this.isInteracting;\n  }\n}\n\n// Create billboards array for easy access\nexport const billboards: Billboard[] = [\n  new Billboard({\n    position: new THREE.Vector3(5, 0, -5),\n    rotation: Math.PI / 4, // 45 degrees\n    title: \"Welcome to My Land!\",\n    message:\n      \"<p>This is an interactive 3D world built with Three.js.</p><p>Walk around and explore the environment. Talk to NPCs by approaching them.</p><p>Use WASD to move and arrow keys to look around.</p>\",\n  }),\n  new Billboard({\n    position: new THREE.Vector3(-8, 0, 2),\n    rotation: -Math.PI / 6, // -30 degrees\n    title: \"Game Updates\",\n    message:\n      \"<p><strong>Version 1.18.0 Changes:</strong></p><ul><li>Added interactive billboards</li><li>Improved collision detection</li><li>Fixed camera rotation bugs</li><li>Added more environmental objects</li></ul>\",\n  }),\n];\n\n// Function to check for billboard interactions\nexport function checkBillboardInteractions(\n  playerPosition: THREE.Vector3\n): void {\n  // Check if any billboards that are currently interacting should end their interaction\n  // because the player walked away\n  const interactingBillboard = billboards.find((billboard) =>\n    billboard.getIsInteracting()\n  );\n  if (interactingBillboard) {\n    if (interactingBillboard.checkLeaveRange(playerPosition)) {\n      // Player walked away from a billboard they were interacting with\n      interactingBillboard.endInteraction();\n    }\n    return; // Don't check for new interactions while in interaction\n  }\n\n  // Check if player is close enough to any billboard to start an interaction\n  billboards.forEach((billboard) => {\n    if (billboard.checkInteraction(playerPosition)) {\n      billboard.startInteraction();\n    }\n  });\n}\n","import * as THREE from \"three\";\nimport { gameInstance } from \"./gameInstance\";\n\n// Store global instance of resize handler\nlet globalResizeHandler: ((event: UIEvent) => void) | null = null;\n\nexport function setScene(): {\n  scene: THREE.Scene;\n  camera: THREE.PerspectiveCamera;\n  renderer: THREE.WebGLRenderer;\n} {\n  console.log(\"Setting up 3D world...\");\n  const scene = new THREE.Scene();\n  // scene.background = new THREE.Color(0xadd8e6);\n\n  // Load the starfield image as the background\n  const textureLoader = new THREE.TextureLoader();\n  const galaxyTexture = textureLoader.load(\"assets/starfield.svg\");\n\n  // Set the texture as the scene background\n  // This is much simpler than creating a sphere\n  scene.background = galaxyTexture;\n\n  const camera = new THREE.PerspectiveCamera(\n    75,\n    window.innerWidth / window.innerHeight,\n    0.1,\n    1000\n  );\n  camera.position.set(0, 2, 5);\n  camera.lookAt(0, 1, 0);\n\n  // Get the canvas element\n  const canvas = document.getElementById(\"gameCanvas\") as HTMLCanvasElement;\n\n  // If there's an existing renderer in the gameInstance, dispose it properly\n  if (gameInstance.renderer) {\n    console.log(\"Disposing existing renderer\");\n    gameInstance.renderer.dispose();\n    gameInstance.renderer = null;\n  }\n\n  // Create a new renderer - Always create a new one to avoid context issues\n  const renderer = new THREE.WebGLRenderer({\n    canvas: canvas,\n    antialias: true,\n    powerPreference: \"high-performance\", // Optimization\n  });\n\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  renderer.setPixelRatio(window.devicePixelRatio);\n\n  // Lighting and floor creation\n  const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\n  scene.add(ambientLight);\n\n  const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n  directionalLight.position.set(1, 1, 1);\n  scene.add(directionalLight);\n\n  // Create a silver floor instead of green\n  const floorTexture = textureLoader.load(\"assets/silver_floor.svg\");\n  const floorGeometry = new THREE.PlaneGeometry(50, 50);\n  const floorMaterial = new THREE.MeshStandardMaterial({\n    color: 0xc0c0c0, // Silver color\n    map: floorTexture, // Apply the texture\n    roughness: 0.8, // Less rough for a more metallic feel\n    metalness: 0.1, // Higher metalness for a more reflective appearance\n    envMapIntensity: 0.5, // Control the reflection intensity\n  });\n  const floor = new THREE.Mesh(floorGeometry, floorMaterial);\n  floor.rotation.x = -Math.PI / 2; // Make it horizontal\n  floor.position.y = 0; // Position at ground level\n  scene.add(floor);\n\n  return { scene, camera, renderer };\n}\n\nexport function setWindowResize(\n  camera: THREE.PerspectiveCamera,\n  renderer: THREE.WebGLRenderer\n): void {\n  // Remove any existing resize listeners first\n  if (globalResizeHandler) {\n    window.removeEventListener(\"resize\", globalResizeHandler);\n    globalResizeHandler = null;\n  }\n\n  // Create new resize handler\n  const resizeHandler = () => {\n    // Make sure we're using the current game instance if available\n    const currentCamera = gameInstance.camera || camera;\n    const currentRenderer = gameInstance.renderer || renderer;\n\n    if (currentCamera && currentCamera instanceof THREE.PerspectiveCamera) {\n      currentCamera.aspect = window.innerWidth / window.innerHeight;\n      currentCamera.updateProjectionMatrix();\n    }\n\n    if (currentRenderer) {\n      currentRenderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  };\n\n  // Store the handler globally for future cleanup\n  globalResizeHandler = resizeHandler;\n  window.addEventListener(\"resize\", resizeHandler);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkthree_js_game\"] = self[\"webpackChunkthree_js_game\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [233], () => (__webpack_require__(468)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","scene","createTree","x","z","trunkGeometry","THREE","CylinderGeometry","trunkMaterial","MeshStandardMaterial","color","trunk","Mesh","position","set","leavesGeometry","ConeGeometry","leavesMaterial","leaves","add","createRock","scale","rockGeometry","DodecahedronGeometry","rockMaterial","roughness","rock","rotation","y","Math","random","PI","createHouse","baseGeometry","BoxGeometry","baseMaterial","base","roofGeometry","roofMaterial","roof","doorGeometry","PlaneGeometry","doorMaterial","door","console","log","ViewResetButton","this","resetButton","document","createElement","innerText","id","applyStyles","addEventListener","handleClick","bind","body","appendChild","getInstance","instance","btn","style","bottom","right","width","height","backgroundColor","border","borderRadius","fontSize","fontWeight","cursor","display","alignItems","justifyContent","zIndex","boxShadow","transition","onmouseover","transform","onmouseout","onmousedown","onmouseup","gameInstance","character","resetCameraView","obstacles","setObstacles","gameScene","sceneObstacles","traverse","object","mesh","abs","geometry","push","length","animationLoop","renderer","camera","animationId","requestAnimationFrame","update","updateCamera","checkBillboardInteractions","render","error","stopAnimation","cancelAnimationFrame","parScene","parRenderer","parCharacter","parCamera","Character","warn","remove","MessageType","MessageSystem","storedInstructions","currentlyShowingInstruction","currentlyShowingConversation","isTouchDevice","currentlyShowingAnnouncement","_originalStyles","window","navigator","maxTouchPoints","instructionElement","top","left","padding","fontFamily","maxWidth","maxHeight","overflowY","conversationElement","instructionsButton","showInstructionsList","instructionsListElement","announcementElement","e","key","hideAll","target","contains","passive","addMobileStyles","styleEl","innerHTML","head","show","message","type","CONVERSATION","closeButton","INSTRUCTION","titleMatch","match","title","storeInstruction","closeButtonElement","querySelector","stopPropagation","hideInstruction","hideConversation","hideAnnouncement","hide","showGameInstructions","instructions","version","content","findIndex","instr","timestamp","Date","orderedInstructions","sort","a","b","getTime","listHtml","forEach","instruction","index","itemPadding","itemMargin","querySelectorAll","item","parseInt","currentTarget","getAttribute","showStoredInstruction","showLoading","originalPosition","originalTop","originalLeft","originalMaxWidth","hideLoading","addInstruction","formattedContent","showAnnouncement","isShowingAnnouncement","isShowingMessage","isShowingInstruction","isShowingConversation","isTouchEnabled","VirtualKeyboard","isTouch","container","className","userSelect","touchAction","moveContainer","flexDirection","gap","rotateContainer","forwardButton","createButton","backwardButton","yawLeftButton","yawRightButton","pitchUpButton","pitchDownButton","moveLabel","textContent","textAlign","marginBottom","textShadow","rotateLabel","moveButtonGroup","yawButtonGroup","pitchButtonGroup","addStyles","KeyboardButton","setToggleCallback","visible","setCharacter","text","direction","button","includes","preventDefault","handleButtonPress","opacity","handleButtonRelease","keyDownEvent","KeyboardEvent","code","getKeyCodeFromDirection","bubbles","dispatchEvent","keyUpEvent","setVisibility","styleElement","characterGeometry","characterMaterial","constructor","rotationSpeed","pitchSpeed","movementSpeed","moveForward","moveBackward","yawLeft","yawRight","pitchUp","pitchDown","maxPitchUp","maxPitchDown","currentPitch","keyControlsSetup","collider","Box3","setFromObject","velocity","Vector3","setupControls","onKeyDown","onKeyUp","removeEventListener","event","sin","cos","lengthSq","clone","updateMatrix","checkCollisions","isOutOfBounds","copy","checkNPCInteractions","halfFloorSize","obstacle","obstacleBox","intersectsBox","directionX","directionZ","lookAt","pitchQuaternion","Quaternion","setFromAxisAngle","quaternion","multiply","initialized","dispose","canvas","getElementById","parentNode","gl","getContext","extension","getExtension","loseContext","init","cleanupGameInstance","newScene","newCamera","newRenderer","setScene","addEnvironmentObjects","npcs","npc","createMesh","billboards","billboard","virtualKeyboard","setWindowResize","startAnimation","setTimeout","readyState","NPC","config","interactionRange","leaveRange","isInteracting","material","MeshPhongMaterial","checkInteraction","playerPosition","distanceTo","checkLeaveRange","startConversation","formattedMessage","endConversation","closeConversation","interactingNPC","find","isVisible","onToggleCallback","toggleButton","callback","getIsVisible","Billboard","Group","frameGeometry","frameMaterial","metalness","frame","boardGeometry","boardMaterial","board","postGeometry","postMaterial","leftPost","rightPost","headerGeometry","headerMaterial","header","startInteraction","endInteraction","getIsInteracting","interactingBillboard","globalResizeHandler","Scene","textureLoader","TextureLoader","galaxyTexture","load","background","PerspectiveCamera","innerWidth","innerHeight","WebGLRenderer","antialias","powerPreference","setSize","setPixelRatio","devicePixelRatio","ambientLight","AmbientLight","directionalLight","DirectionalLight","floorTexture","floorGeometry","floorMaterial","map","envMapIntensity","floor","resizeHandler","currentCamera","currentRenderer","aspect","updateProjectionMatrix","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}